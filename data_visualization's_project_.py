# -*- coding: utf-8 -*-
"""Data Visualization's Project .ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1UzoyDyUYft_LSJirCItT9MWd2ChG9CyS

# Minimum Wage and Wage Growth Trends in Europe

Group member: Yongjun Zhu, Yue Wei, Lan Wang, Yuanjing Zhu

## Abstract:

We are interested in analyzing minimum wage trends across Europe, their relationship with economic growth, and regional disparities in wage policies. Our study will address the following key questions:

How has minimum wages evolved across European countries from 2017 to 2023? We will examine trends in nominal and real wage growth, comparing across regions and income groups.

How do minimum wages compare to actual wage levels across different countries? Using data from the OECD and ILO, we will investigate wage distributions and disparities.

What is the relationship between economic growth and wage trends? By incorporating GDP data from the World Bank, we will assess whether higher GDP growth correlates with stronger wage increases.

How do wage policies and trends vary geographically? We will employ geospatial visualization to map wage growth rates and compare regional differences.

How can interactive data visualizations enhance the understanding of wage trends? Through interactive maps and time-series visualizations, we aim to present an intuitive representation of wage dynamics across Europe.

For our analysis, we will clean and preprocess datasets from the ILO, OECD, and World Bank, ensuring consistency in country names and handling missing values appropriately. Using seaborn and matplotlib, we will create line charts to illustrate wage trends over time for Europe as a whole and for individual countries. Additionally, we will use OpenStreetMap with Folium to develop an interactive choropleth map, where users can explore country-specific wage information with popups and a time slider. Our project aims to provide a clear, data-driven visualization of wage policies and economic trends across Europe.

#### 1. Average minimum wages evolved across European countries from 2017 to 2023.

(Use connected scatter and bar chart with the help of matplotlib.pyplot)
"""

#Question 1
import pandas as pd
import matplotlib.pyplot as plt

# Load the minimum‑wage dataset the user provided
file_path = "globalwagereport-2024-25data.xlsx"
real_df = pd.read_excel(file_path, sheet_name="Real wage growth")
nom_df = pd.read_excel(file_path, sheet_name="Nominal wage")

# Keep only the European economies
real_eu = real_df[real_df["Region"] == "Europe and Central Asia"].copy()
nom_eu = nom_df.merge(
    real_df[["country_name", "Region", "Subregion - detailed", "Income group"]],
    left_on="countryname",
    right_on="country_name",
    how="left",
)
nom_eu = nom_eu[nom_eu["Region"] == "Europe and Central Asia"]

# Years of interest
real_years = [2017, 2018, 2019, 2020, 2021, 2022, 2023]
nom_years = [2017, 2018, 2019, 2020, 2021, 2022, 2023]

# ------------------------------------------------------------------
# 1) Nominal minimum‑wage growth by European sub‑region
# ------------------------------------------------------------------
# Compute year‑on‑year % change
nom_growth = nom_eu[["countryname", "Subregion - detailed", "Income group"]].copy()
for yr in nom_years[1:]:
    nom_growth[yr] = (nom_eu[yr] / nom_eu[yr - 1] - 1) * 100

nom_sub_avg = (
    nom_growth.groupby("Subregion - detailed")[nom_years[1:]]
    .mean(numeric_only=True)
    .sort_index()
)

plt.figure(figsize=(8, 6))
for sub in nom_sub_avg.index:
    plt.plot(nom_years[1:], nom_sub_avg.loc[sub], label=sub)
plt.title("Average nominal minimum‑wage growth in Europe, by sub‑region (2018‑2023)")
plt.xlabel("Year")
plt.ylabel("Growth rate (%)")
plt.legend()
plt.tight_layout()
plt.show()

# ------------------------------------------------------------------
# 2) Real minimum‑wage growth by European sub‑region
# ------------------------------------------------------------------
real_cols = ["Subregion - detailed", "Income group"] + real_years
real_subset = real_eu[real_cols]
real_sub_avg = real_subset.groupby("Subregion - detailed")[real_years].mean()

plt.figure(figsize=(8, 6))
for sub in real_sub_avg.index.sort_values():
    plt.plot(real_years, real_sub_avg.loc[sub], label=sub)
plt.title("Average real minimum‑wage growth in Europe, by sub‑region (2017‑2023)")
plt.xlabel("Year")
plt.ylabel("Growth rate (%)")
plt.legend()
plt.tight_layout()
plt.show()

# ------------------------------------------------------------------
# 3) Nominal vs. real growth by income group (Europe, 2017‑2023 averages)
# ------------------------------------------------------------------
# Nominal
nom_income_avg = (
    nom_growth.groupby("Income group")[nom_years[1:]]
    .mean(numeric_only=True)
    .mean(axis=1)
)  # average across years 2018‑2023

# Real
real_income_avg = real_subset.groupby("Income group")[real_years].mean().mean(axis=1)

inc_groups = nom_income_avg.index
x = range(len(inc_groups))

plt.figure(figsize=(7, 5))
plt.bar(x, nom_income_avg.values, width=0.4, label="Nominal", align="center")
plt.bar(
    [i + 0.4 for i in x],
    real_income_avg.reindex(inc_groups).values,
    width=0.4,
    label="Real",
    align="center",
)
plt.xticks([i + 0.2 for i in x], inc_groups, rotation=0)
plt.ylabel("Average growth rate 2017‑2023 (%)")
plt.title("Nominal vs. real minimum‑wage growth by income group\n(Europe, 2017‑2023 averages)")
plt.legend()
plt.tight_layout()
plt.show()



"""Nominal Minimum Wage Growth (2018–2023):
Central Asia had the highest wage growth, but it was very unstable. Eastern Europe also had higher growth than Western and Northern Europe, which stayed low and steady.
→ Some regions raised minimum wages quickly, but not evenly across Europe.

Real Minimum Wage Growth (2017–2023):
After adjusting for inflation, wage growth was much lower. Many regions, like Eastern and Northern Europe, even saw real wages fall around 2022 because of inflation.
→ Even if wages increased, people in many countries could actually afford less.

Nominal vs. Real Growth by Income Group:
Lower-middle income countries had the biggest rise in nominal wages but small real growth. High-income countries had steady but small changes.
→ Lower-income countries raised wages faster, but inflation took away a lot of the benefit.

#### Graphs of minimum wages compare to actual wage levels across different countries
"""

# Question 2
import pandas as pd
import matplotlib.pyplot as plt

YEARS = [str(y) for y in range(2017, 2024)]
df = (pd.read_csv("Minimum_to_average_wage_rate.csv")
        .query("`Time period.1` == 'Mean'")
        .set_index("country")[YEARS])

fig, ax = plt.subplots(figsize=(10, 7))

# pick ONE of the two approaches ↓
im = ax.imshow(df.values, aspect='auto', cmap='YlGnBu')           # ① sequential
# --- or ---
# import matplotlib.colors as mcolors
# norm = mcolors.TwoSlopeNorm(vmin=df.values.min(), vcenter=50, vmax=df.values.max())
# im = ax.imshow(df.values, aspect='auto', cmap='RdBu_r', norm=norm)   # ② diverging

ax.set_xticks(range(len(YEARS)), YEARS)
ax.set_yticks(range(len(df.index)), df.index)
ax.set_title("Minimum-to-average wage ratio (%)  •  2017-2023")

cbar = fig.colorbar(im, ax=ax)
cbar.set_label("ratio %")

plt.tight_layout()
plt.show()

import pandas as pd
import matplotlib.pyplot as plt

# --- load & reshape ----------------------------------------------------------
YEARS = [str(y) for y in range(2017, 2024)]
df = (pd.read_csv("Minimum_to_average_wage_rate.csv")
        .query("`Time period.1` == 'Mean'")
        .set_index("country")[YEARS])

fig, ax = plt.subplots(figsize=(10, 7))
im = ax.imshow(df.values, aspect='auto')

# --- axes & labels -----------------------------------------------------------
ax.set_xticks(range(len(YEARS)), YEARS)
ax.set_yticks(range(len(df.index)), df.index)
ax.set_title("Minimum-to-average wage ratio (%)  •  2017-2023")

# --- colour bar --------------------------------------------------------------
cbar = fig.colorbar(im, ax=ax)
cbar.set_label("ratio %")

plt.tight_layout()
plt.show()

import pandas as pd
import matplotlib.pyplot as plt

df = (pd.read_csv("Minimum_to_average_wage_rate.csv")
        .query("`Time period.1` == 'Mean'")
        .set_index("country")[["2017", "2023"]]
        .dropna())

fig, ax = plt.subplots(figsize=(10, 9))

x0, x1 = 0, 1          # two vertical positions
for _, row in df.iterrows():
    ax.plot([x0, x1], [row["2017"], row["2023"]])
    ax.text(x0-0.02, row["2017"], row.name, ha='right', va='center', fontsize=8)

# vertical axis ticks / labels
ax.set_xticks([x0, x1], ["2017", "2023"])
ax.set_ylabel("Minimum-to-average wage ratio (%)")
ax.set_title("Change in minimum-wage / average-wage ratio, 2017 → 2023")

plt.tight_layout()
plt.show()

import pandas as pd
import matplotlib.pyplot as plt
from matplotlib import cycler

# ─── Load & prepare the two columns we need ────────────────────
df = (pd.read_csv("Minimum_to_average_wage_rate.csv")
        .query("`Time period.1` == 'Mean'")
        .set_index("country")[["2017", "2023"]]
        .dropna())

# Add a helper field telling us whether the ratio went up or down
df["dir"] = (df["2023"] >= df["2017"]).map({True: "up", False: "down"})

# ─── Define our two easily-distinguishable colours ─────────────
palette = {"up":  "#008080",   # dark teal   (increase)
           "down":"#D65F00"}   # warm orange (decrease)

# ─── Plot ──────────────────────────────────────────────────────
fig, ax = plt.subplots(figsize=(7, 9))

# Put 2017 on x=0, 2023 on x=1
x0, x1 = 0, 1

for country, row in df.sort_values("2017", ascending=False).iterrows():
    colour = palette[row["dir"]]
    ax.plot([x0, x1], [row["2017"], row["2023"]],
            color=colour, lw=2, marker='o')
    ax.text(x0-0.02, row["2017"], country, ha='right', va='center', fontsize=8)

# ─── Cosmetics ─────────────────────────────────────────────────
ax.set_xticks([x0, x1], ["2017", "2023"])
ax.set_ylabel("Minimum-to-average wage ratio (%)")
ax.set_title("Change in minimum-wage / average-wage ratio, 2017 → 2023")

# Legend explaining the colours
for label,col in palette.items():
    ax.plot([], [], color=col, lw=4, label=f"{'Increase' if label=='up' else 'Decrease'}")
ax.legend(frameon=False, loc="lower right")

plt.tight_layout()
plt.show()

import pandas as pd
import matplotlib.pyplot as plt

YEARS = [str(y) for y in range(2017, 2024)]
countries = ["Germany", "Spain", "Poland", "France"]    # pick any four

df = (pd.read_csv("Minimum_to_average_wage_rate.csv")
        .query("`Time period.1` == 'Mean' and country in @countries")
        .set_index("country")[YEARS]
        .T)                       # now rows = years, cols = countries
df.index = df.index.astype(int)   # nicer on the x-axis

fig, ax = plt.subplots(figsize=(7, 5))

for c in df.columns:
    ax.plot(df.index, df[c], marker='o', label=c)

ax.set_xlabel("Year")
ax.set_ylabel("Minimum-to-average wage ratio (%)")
ax.set_title("Trajectory of wage-floor ratio (2017-2023)")
ax.legend()
plt.tight_layout()
plt.show()

import pandas as pd
import plotly.express as px

YEARS = [str(y) for y in range(2017, 2024)]
df = (pd.read_csv("Minimum_to_average_wage_rate.csv")
        .query("`Time period.1` == 'Mean'")
        .melt(id_vars="country", value_vars=YEARS,
              var_name="year", value_name="ratio")
        .dropna())

fig = px.choropleth(
    df, locations="country", locationmode="country names",
    color="ratio",
    animation_frame="year",
    range_color=[df["ratio"].min(), df["ratio"].max()],
    color_continuous_scale="Blues",
    title="Minimum-to-average wage ratio (%)  •  2017-2023"
)
fig.update_layout(coloraxis_colorbar_title="ratio %")
fig        # in notebooks; or fig.write_html("wage_ratio_animation.html")

"""#### Relationship between Economic Growth and Wage Trends"""

Economic Growth and Wage Trends# Q3: Relationship between Economic Growth and Wage Trends
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from openpyxl.styles import fills
import plotly.express as px



# 1. Load real wage growth data
wage_file = "/var/tmp/globalwagereport-2024-25data.xlsx"

real_df = pd.read_excel(wage_file, sheet_name="Real wage growth")

# Keep only Europe and Central Asia
real_eu = real_df[real_df["Region"] == "Europe and Central Asia"].copy()

# Calculate average real wage growth (2017-2023)
real_years = [2017, 2018, 2019, 2020, 2021, 2022, 2023]
real_eu["real_wage_growth_avg"] = real_eu[real_years].mean(axis=1)

wage_avg = real_eu[["country_name", "real_wage_growth_avg"]].copy()

# 2. Load GDP growth data
gdp_file = "/var/tmp/API_NY.GDP.MKTP.KD_DS2_en_csv_v2_19406.csv"

# Skip header metadata rows and read real GDP
gdp_raw = pd.read_csv(gdp_file, skiprows=4)

# Select needed columns
# GDP (constant 2015 US$), columns are years
# To calculate GDP growth, we need year-to-year percentage changes
# First, get GDP values
columns_needed = ["Country Name"] + [str(yr) for yr in range(2016, 2024)]
gdp = gdp_raw[columns_needed].copy()

# Calculate GDP growth rates
for yr in range(2017, 2024):
    gdp[str(yr) + "_growth"] = (gdp[str(yr)] / gdp[str(yr - 1)] - 1) * 100

# Then calculate 2017-2023 average GDP growth
growth_cols = [str(yr) + "_growth" for yr in range(2017, 2024)]
gdp["gdp_growth_avg"] = gdp[growth_cols].mean(axis=1, skipna=True)

# Get country and gdp_growth_avg
gdp_avg = gdp[["Country Name", "gdp_growth_avg"]]

# 3. Merge wage and GDP data
data = wage_avg.merge(
    gdp_avg, left_on="country_name", right_on="Country Name", how="inner"
)

# Drop NA if any
data = data.dropna(subset=["real_wage_growth_avg", "gdp_growth_avg"])

# 4. Plot relationship

fig = px.scatter(
    data,
    x="gdp_growth_avg",
    y="real_wage_growth_avg",
    hover_name="country_name",
    trendline="ols",
    labels={
        "gdp_growth_avg": "Average GDP Growth Rate (2017-2023, %)",
        "real_wage_growth_avg": "Average Real Wage Growth Rate (2017-2023, %)"
    },
    title="Interactive Relationship between GDP Growth and Real Wage Growth (Europe, 2017-2023)"
)

fig.update_traces(marker=dict(size=10))
fig.update_layout(
    width=800,
    height=600,
    template="plotly_white",
    title_x=0.5,
)
fig.show()
fig.write_html("interactive real wage growth trends in euro.html")

"""To explore the relationship between economic growth and wage trends across Europe from 2017 to 2023, we created a scatter plot comparing each country's average GDP growth rate with its average real wage growth rate during the same period.

The resulting visualization indicates a weak negative correlation between GDP growth and real wage growth, with a correlation coefficient of -0.17. This suggests that, contrary to common assumptions, countries with higher GDP growth rates did not necessarily experience stronger real wage increases. In fact, there was a slight tendency for higher-GDP-growth countries to have lower real wage growth, although the relationship is very weak and not statistically significant.

This finding highlights that economic expansion alone does not guarantee proportional wage improvements for workers. Factors such as inflation, labor market conditions, government wage policies, and sectoral differences may mediate the link between macroeconomic growth and wage trends.

It is important to note that our analysis is based on country-level averages and linear modeling; thus, it does not capture potential non-linear relationships or country-specific labor dynamics. Further research could explore these complexities in greater detail.
"""

#!pip install plotly

import plotly.express as px

# Prepare real wage growth data
file_path = "globalwagereport-2024-25data.xlsx"
real_df = pd.read_excel(file_path, sheet_name="Real wage growth")

real_eu = real_df[real_df["Region"] == "Europe and Central Asia"].copy()

real_melted = real_eu.melt(
    id_vars=["country_name", "Income group", "Subregion - detailed"],
    value_vars=[2017, 2018, 2019, 2020, 2021, 2022, 2023],
    var_name="Year",
    value_name="Real_Wage_Growth"
)

real_melted = real_melted.dropna(subset=["Real_Wage_Growth"])
real_melted["Year"] = real_melted["Year"].astype(int)

# Interactive line chart
fig = px.line(
    real_melted,
    x="Year",
    y="Real_Wage_Growth",
    color="country_name",
    line_group="country_name",
    hover_name="country_name",
    labels={
        "Real_Wage_Growth": "Real Wage Growth (%)",
        "Year": "Year"
    },
    title="Interactive Real Wage Growth Trends in Europe (2017–2023)"
)

fig.update_layout(
    hovermode="x unified",
    legend_title_text="Country",
    height=600,
    width=1000
)

fig.write_html("Interactive Real Wage Growth Trends in Europe.html")

#Interactive Scatter Plot: GDP Growth vs Real Wage Growth
fig = px.scatter(
    data,
    x="gdp_growth_avg",
    y="real_wage_growth_avg",
    text="country_name",
    hover_name="country_name",
    labels={
        "gdp_growth_avg": "Average GDP Growth Rate (2017–2023, %)",
        "real_wage_growth_avg": "Average Real Wage Growth Rate (2017–2023, %)"
    },
    title="GDP Growth vs. Real Wage Growth in Europe (2017–2023)",
    trendline="ols",  # Add regression line
    size_max=60,
    height=600,
    width=900
)

fig.update_traces(textposition="top center", marker=dict(size=10, opacity=0.7))
fig.update_layout(
    hovermode="closest",
    legend_title_text="",
    xaxis_title="Average GDP Growth Rate (%)",
    yaxis_title="Average Real Wage Growth Rate (%)",
    template="plotly_white"
)

fig

"""#### Geospatial visualization to map wage growth rates and compare regional differences"""

!pip install folium geopandas shapely pyproj

# Import necessary libraries
import pandas as pd
import folium
import geopandas as gpd
import requests
import zipfile
import io
import os

file_path = '/content/drive/MyDrive/GroupD/globalwagereport-2024-25data.xlsx'
df = pd.read_excel(file_path)

# Keep only necessary columns
columns_needed = ['country_name', 2017, 2018, 2019, 2020, 2021, 2022, 2023]
df = df[columns_needed]

# Drop missing
df = df.dropna(subset=[2017, 2023])

# Calculate total and average annual wage growth
df['Total_Growth_Rate'] = ((df[2023] - df[2017]) / df[2017]) * 100
df['Avg_Annual_Growth_Rate'] = df['Total_Growth_Rate'] / 6

# Download world countries GeoJSON
geojson_url = 'https://raw.githubusercontent.com/johan/world.geo.json/master/countries.geo.json'
world = gpd.read_file(geojson_url)

# Make sure country names match
print(world.columns)  # Should contain 'name' for country names

# Focus on Europe only
europe_countries = [
    'Albania', 'Andorra', 'Austria', 'Belarus', 'Belgium', 'Bosnia and Herzegovina', 'Bulgaria',
    'Croatia', 'Cyprus', 'Czech Republic', 'Denmark', 'Estonia', 'Finland', 'France', 'Germany',
    'Greece', 'Hungary', 'Iceland', 'Ireland', 'Italy', 'Kosovo', 'Latvia', 'Liechtenstein',
    'Lithuania', 'Luxembourg', 'Malta', 'Moldova', 'Monaco', 'Montenegro', 'Netherlands',
    'North Macedonia', 'Norway', 'Poland', 'Portugal', 'Romania', 'San Marino', 'Serbia',
    'Slovakia', 'Slovenia', 'Spain', 'Sweden', 'Switzerland', 'Ukraine', 'United Kingdom'
]

# Filter world to only Europe
europe = world[world['name'].isin(europe_countries)]

# Merge wage data
merged = europe.merge(df, left_on='name', right_on='country_name', how='left')

# Setup folium map
m = folium.Map(location=[54, 15], zoom_start=3, tiles="cartodbpositron")

# Add choropleth
folium.Choropleth(
    geo_data=merged,
    data=merged,
    columns=['name', 'Avg_Annual_Growth_Rate'],
    key_on='feature.properties.name',
    fill_color='YlGnBu',
    fill_opacity=0.7,
    line_opacity=0.2,
    nan_fill_color='gray',
    legend_name='Average Annual Wage Growth (%) (2017-2023)'
).add_to(m)

# Add hover tooltips
folium.GeoJson(
    merged,
    style_function=lambda x: {'fillColor': 'transparent', 'color': 'transparent'},
    tooltip=folium.GeoJsonTooltip(
        fields=['name', 'Avg_Annual_Growth_Rate'],
        aliases=['Country:', 'Avg Annual Growth Rate:'],
        localize=True
    )
).add_to(m)

# Show map
m

"""### How do wage policies and trends vary geographically?

We analyzed the evolution of wage levels across Europe from 2017 to 2023 using the ILO Global Wage Dataset. By computing the average annual real wage growth rate for each country, we created a geospatial choropleth map to visualize regional disparities.

The map reveals clear geographic trends:
- **Eastern Europe** (e.g., Romania, Bulgaria, Poland) generally exhibited **higher annual wage growth rates**, reflecting faster economic development and labor market convergence.
- **Western Europe** (e.g., Germany, France, UK) showed **moderate wage growth**, indicating more stable but slower-growing mature economies.
- **Southern Europe** (e.g., Greece, Italy, Spain) displayed **lower or even stagnant wage growth**, likely due to ongoing economic structural issues post-crisis.
- **Nordic countries** (e.g., Sweden, Denmark) maintained **steady, moderate wage growth**, consistent with high-income economies.

This geospatial analysis highlights how wage policies, labor market structures, and post-pandemic economic recovery have contributed to uneven wage growth patterns across the European continent.

"""